name: Spec to Code PR
on:
  push:
    paths:
      - "spec/**"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Install specapp (placeholder)
        run: |
          echo "Installing specapp CLI (placeholder)."
          # dotnet tool restore
          # dotnet build tools/specapp/Specappular.sln -c Release

      - name: Generate from spec
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # dotnet run --project tools/specapp/src/Specapp.Cli/Specapp.Cli.csproj plan --spec spec --out .specapp/plan.json
          # dotnet run --project tools/specapp/src/Specapp.Cli/Specapp.Cli.csproj generate --plan .specapp/plan.json --out codegen
          # dotnet run --project tools/specapp/src/Specapp.Cli/Specapp.Cli.csproj testgen --spec spec --out codegen/tests
          echo "Generate placeholder; wire up CLI next."

      - name: Create PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH="specapp/${{ github.sha }}"

          git config user.name "specapp[bot]"
          git config user.email "specapp[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH" || git checkout "$BRANCH"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Spec-to-code: update generated artifacts"
          git push -u origin "$BRANCH"

          gh pr create \
            --title "Spec-to-code: ${{ github.sha }}" \
            --body "Automated update from spec changes." \
            --base "${{ github.ref_name }}" \
            --head "$BRANCH" || echo "PR may already exist."
